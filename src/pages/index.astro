---
import { eq } from "astro:db";
import BaseLayout from "../layout/BaseLayout.astro";
import { db, Tasks } from "astro:db";

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const crudType = formData.get("crud_type");

  if (crudType === "create") {
    const autor = formData.get("autor");
    const name = formData.get("name");
    const done = formData.get("done") === "true";

    if (typeof autor === "string" && typeof name === "string" && typeof done === "boolean") {
      await db.insert(Tasks).values({
        autor,
        name,
        done,
      });
    }
  }

  if (crudType === "update") {
    const id = Number(formData.get("id"));
    const autor = formData.get("autor");
    const name = formData.get("name");
    const done = formData.get("done") === "true";

    if (typeof id === "number" && typeof autor === "string" && typeof name === "string" && typeof done === "boolean") {
      await db
        .update(Tasks)
        .set({
          autor,
          name,
          done,
        })
        .where(eq(Tasks.id, id))
        .catch((error) => {
          console.log(error);
        });
    }
  }

  if (crudType === "delete") {
    const id = Number(formData.get("id"));

    if (typeof id === "number") {
      await db
        .delete(Tasks)
        .where(eq(Tasks.id, id))
        .catch((error) => {
          console.log(error);
        });
    }
  }
}

// Get all the tasks to update the UI
const allTasks = await db.select().from(Tasks);
---

<BaseLayout title="CRUD">
  <main>
    <div class="forms">
      <h2>Añadir Tarea :)</h2>
      <form method="POST">
        <input type="hidden" name="crud_type" value="create" />
        <label for="autor">Autor:</label>
        <input type="text" id="autor" name="autor" required />
        <label for="name">Título:</label>
        <input type="text" id="name" name="name" required />
        <label for="done">¿Completada?</label>
        <select id="done" name="done">
          <option value="true">Sí</option>
          <option value="false">No</option>
        </select>
        <button type="submit">Agregar Tarea</button>
      </form>

      <h2>Actualizar Tarea</h2>
      <form method="POST">
        <input type="hidden" name="crud_type" value="update" />
        <label for="id">ID de Tarea a Actualizar:</label>
        <input type="number" id="id" name="id" required />
        <label for="autor">Nuevo Autor:</label>
        <input type="text" id="autor" name="autor" />
        <label for="name">Nuevo Título:</label>
        <input type="text" id="name" name="name" />
        <label for="done">¿Completada?</label>
        <select id="done" name="done">
          <option value="true">Sí</option>
          <option value="false">No</option>
        </select>
        <button type="submit">Actualizar Tarea</button>
      </form>

      <h2>Eliminar Tarea</h2>
      <form method="POST">
        <input type="hidden" name="crud_type" value="delete" />
        <label for="id">ID de Tarea a eliminar:</label>
        <input type="number" id="id" name="id" required />
        <button type="submit">Eliminar Tarea</button>
      </form>
    </div>

    <div class="tasks">
      <h1>Tareas</h1>
      <ul>
        {
          allTasks.map((task) => {
            return (
              <li class="task-item">
                <p>
                  <strong>Id:</strong>
                  <span>{task.id}</span>
                </p>
                <p>
                  <strong>Tarea:</strong>
                  <span>{task.name}</span>
                </p>
                <p>
                  <strong>Autor:</strong>
                  <span>{task.autor}</span>
                </p>
                <p>
                  <strong>Completada:</strong>
                  <span>{task.done ? "SÍ" : "NO"}</span>
                </p>
              </li>
            );
          })
        }
      </ul>
    </div>
  </main>
</BaseLayout>

<style>
  main {
    display: flex;
    padding-inline: 2rem;
  }

  ul {
    list-style: none;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .task-item {
    padding: 0.5rem 2rem;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    background-color: white;
    border-radius: 8px;
  }

  .forms,
  .tasks {
    width: 100%;
  }
</style>
